name: Build Workflow

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build_iOS:
    runs-on: macos-12

    steps:
    - name: Check out source code
      uses: actions/checkout@v2

    - name: Prepare Theos
      uses: und3fined/theos-action@main

    - name: Build appdecrypt2
      run: |
        chmod +x build-iOS.sh
        ./build-iOS.sh

    - name: Build wrapper and package
      run: |
        cd wrapper
        rm -f packages/*
        make package FINALPACKAGE=1 THEOS_PACKAGE_SCHEME=rootless

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: dev.und3fy.appdecrypt2
        path: ${{ github.workspace }}/wrapper/packages/*.deb

  # build_openf:
  #   runs-on: macos-latest

  #   steps:
  #   - name: Check out source code
  #     uses: actions/checkout@v4

  #   - name: Set up Rust
  #     uses: actions-rust-lang/setup-rust-toolchain@v1
  #     with:
  #       target: aarch64-apple-ios

  #   - name: Setup dependencies
  #     run: |
  #       cargo install cargo-ndk
  #       clang --version
  #       # download https://github.com/frida/frida/releases/download/16.5.7/frida-core-devkit-16.5.7-ios-arm64.tar.xz with curl
  #       curl -L https://github.com/frida/frida/releases/download/16.5.7/frida-core-devkit-16.5.7-ios-arm64.tar.xz -o frida-core-devkit-16.5.7-ios-arm64.tar.xz
  #       tar -xf frida-core-devkit-16.5.7-ios-arm64.tar.xz
  #       curl -L https://github.com/frida/frida/releases/download/16.5.7/frida-gum-devkit-16.5.7-ios-arm64.tar.xz -o frida-gum-devkit-16.5.7-ios-arm64.tar.xz
  #       tar -xf frida-gum-devkit-16.5.7-ios-arm64.tar.xz

  #       # copy frida headers
  #       cp -f frida-core.h /Applications/Xcode_15.4.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/
  #       # cp -f frida-gum.h /Applications/Xcode_15.4.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/
  #       # sudo cp -f frida-core.h /Library/Developer/CommandLineTools/usr/include/
  #       # sudo cp -f frida-gum.h /Library/Developer/CommandLineTools/usr/include/
  #       # sudo cp -f frida-core.h /usr/local/include/
  #       # sudo cp -f frida-gum.h /usr/local/include/
  #       # copy frida libraries
  #       # cp -f libfrida-core.a /Applications/Xcode_15.4.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/
  #       # cp -f libfrida-gum.a /Applications/Xcode_15.4.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/
  #       # sudo cp -f libfrida-core.a /Library/Developer/CommandLineTools/usr/lib/
  #       # sudo cp -f libfrida-gum.a /Library/Developer/CommandLineTools/usr/lib/
  #       # sudo cp -f libfrida-core.a /usr/local/lib/
  #       # sudo cp -f libfrida-gum.a /usr/local/lib/
  #       cp -f frida-core.h /Applications/Xcode_15.4.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS17.5.sdk/usr/include/
  #       cp -f libfrida-core.a /Applications/Xcode_15.4.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS17.5.sdk/usr/lib/

  #   - name: Build
  #     run: |
  #       cd openf
  #       cargo build --release --target aarch64-apple-ios

  #   - name: Upload binary as artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: openf
  #       path: ${{ github.workspace }}/openf/target/release/openf
